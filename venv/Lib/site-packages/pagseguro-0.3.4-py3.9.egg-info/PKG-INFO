Metadata-Version: 2.1
Name: pagseguro
Version: 0.3.4
Summary: Pagseguro API v2 wrapper
Home-page: https://github.com/rochacbruno/python-pagseguro
Author: Bruno Rocha
Author-email: rochacbruno@gmail.com
License: MIT
Description: python-pagseguro
        [![All Contributors](https://img.shields.io/badge/all_contributors-6-orange.svg?style=flat-square)](#contributors)
        ================
        [![Build
        Status](https://travis-ci.org/rochacbruno/python-pagseguro.png)](https://travis-ci.org/rochacbruno/python-pagseguro)
        [![Coverage
        Status](https://coveralls.io/repos/rochacbruno/python-pagseguro/badge.png)](https://coveralls.io/r/rochacbruno/python-pagseguro)
        [![Code Health](https://landscape.io/github/rochacbruno/python-pagseguro/master/landscape.svg)](https://landscape.io/github/rochacbruno/python-pagseguro/master)
        [![Gitter chat](https://badges.gitter.im/gitterHQ/gitter.png)](https://gitter.im/python-pagseguro/Lobby)
        
        <a target="_blank" href="https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;business=rochacbruno%40gmail%2ecom&amp;lc=BR&amp;item_name=pythonpagseguro&amp;no_note=0&amp;currency_code=BRL&amp;bn=PP%2dDonationsBF%3abtn_donate_SM%2egif%3aNonHostedGuest"><img alt='Donate with Paypal' src='http://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif' /></a>
        
        IntegraÃ§Ã£o com a API v2 de pagamentos e notificaÃ§Ãµes do Pagseguro utilizando requests.
        
        Instalando
        ==========================
        ```bash
        pip install pagseguro
        ```
        
        ou
        
        
        ```bash
        pip install -e git+https://github.com/rochacbruno/python-pagseguro#egg=pagseguro
        ```
        
        ou
        
        ```
        git clone https://github.com/rochacbruno/python-pagseguro
        cd python-pagseguro
        pip install -r requirements.txt
        python setup.py install
        ```
        
        Rodando os testes
        =================
        
        ```
        make test
        ```
        
        Como usar
        =========
        
        ### Carrinho de compras / ordem de venda
        
        Uma instancia de **PagSeguro** funciona como uma ordem de venda, ou um carrinho de compras. Ã‰ preciso criar a instancia passando como parametro email e token.
        
        > Opcionalmente Ã© possivel passar o parametro **data** contendo valores a serem passados diretamente para a API.
        
        ```python
        from pagseguro import PagSeguro
        
        pg = PagSeguro(email="seuemail@dominio.com", token="ABCDEFGHIJKLMNO")
        ```
        
        ### Sandbox e Config Customizadas
        
        Ao instanciar um objecto `PagSeguro`, vocÃª poderÃ¡ passar um parÃ¢metro `config` contendo a class de configuraÃ§Ã£o a ser usada pela classe. A variÃ¡vel `config` somente irÃ¡ aceitar o tipo `dict`.
        
        ```python
        from pagseguro import PagSeguro
        
        config = {'sandbox': True}
        pg = PagSeguro(email="seuemail@dominio.com", token="ABCDEFGHIJKLMNO", config=config)
        ```
        
        O seu config tambÃ©m pode fazer override de algumas vÃ¡riaveis prÃ©-definidas na classe de Config padrÃ£o. SÃ£o elas:
        
        - CURRENCY - Moeda utilizada. Valor padrÃ£o: `'BRL'`
        - DATETIME_FORMAT - Formato de Data/Hora. Valor PadrÃ£o: `'%Y-%m-%dT%H:%M:%S'`
        - REFERENCE_PREFIX - Formato do valor de referÃªncia do produto. Valor PadrÃ£o: `'REF%s'` Obs: Nesse caso, sempre Ã© necessÃ¡rio deixar o `%s` ao final do prefixo para que o mesmo seja preenchido automaticamente
        - USE_SHIPPING - User endereÃ§o de entrega. Valor padrÃ£o: `True`
        
        
        ### Configurando os dados do comprador
        
        ```python
        pg.sender = {
            "name": "Bruno Rocha",
            "area_code": 11,
            "phone": 981001213,
            "email": "rochacbruno@gmail.com",
        }
        ```
        
        ### Configurando endereÃ§o de entrega
        ```python
        pg.shipping = {
            "type": pg.SEDEX,
            "street": "Av Brig Faria Lima",
            "number": 1234,
            "complement": "5 andar",
            "district": "Jardim Paulistano",
            "postal_code": "06650030",
            "city": "Sao Paulo",
            "state": "SP",
            "country": "BRA"
        }
        ```
        
        Caso o **country** nÃ£o seja informado o valor default serÃ¡ "BRA"
        
        O **type** pode ser pg.SEDEX, pg.PAC, pg.NONE
        > Opcionalmente pode ser numerico seguindo a tabela pagseguro:
        
        | NÃºmero | DescriÃ§Ã£o | Type |
        | ------ | --------- | ---- |
        | 1 | PAC | pg.PAC |
        | 2 | SEDEX | pg.SEDEX |
        | 3 | Nao especificado | pg.NONE |
        
        Valores opcionais para **shipping**
        - "cost": "123456.26"
            Decimal, com duas casas decimais separadas por ponto (p.e, 1234.56), maior que 0.00 e menor ou igual a 9999999.00.
        
        
        ### Configurando a referencia
        
        Referencia Ã© geralmente o cÃ³digo que identifica a compra em seu sistema
        
        Por padrÃ£o a referencia serÃ¡ prefizada com "REF", mas isso pode ser alterado setando um prefixo diferente
        
        ```python
        pg.reference_prefix = "CODE"
        pg.reference_prefix = None  # para desabilitar o prefixo
        ```
        
        ```python
        pg.reference = "00123456789"
        print pg.reference
        "REF00123456789"
        ```
        
        ### Configurando valor extra
        
        Especifica um valor extra que deve ser adicionado ou subtraÃ­do ao valor total do pagamento. Esse valor pode representar uma taxa extra a ser cobrada no pagamento ou um desconto a ser concedido, caso o valor seja negativo.
        
        Formato: Float (positivo ou negativo).
        
        ```python
        pg.extra_amount = 12.70
        ```
        
        ### Inserindo produtos no carrinho
        
        O carrinho de compras Ã© uma lista contendo dicionÃ¡rios que representam cada produto nos seguinte formato.
        
        #### adicionando vÃ¡rios produtos
        
        ```python
        pg.items = [
            {"id": "0001", "description": "Produto 1", "amount": 354.20, "quantity": 2, "weight": 200},
            {"id": "0002", "description": "Produto 2", "amount": 50, "quantity": 1, "weight": 1000}
        ]
        ```
        
        O **weight** do produto Ã© representado em gramas
        
        #### Adicionando um produto por vez
        
        Da forma tradicional
        
        ```python
        pg.items.append(
            {"id": "0003", "description": "Produto 3", "amount": 354.20, "quantity": 2, "weight": 200},
        )
        ```
        
        Ou atraves do helper
        
        ```python
        pg.add_item(id="0003", description="produto 4", amount=320, quantity=1, weight=2500)
        ```
        
        ### Configurando a URL de redirect
        
        Para onde o comprador serÃ¡ redirecionado apÃ³s completar o pagamento
        
        ```python
        pg.redirect_url = "http://meusite.com/obrigado"
        ```
        
        ### Configurando a URL de notificaÃ§ao (opcional)
        
        ```python
        pg.notification_url = "http://meusite.com/notification"
        ```
        
        ### Efetuando o processo de checkout
        
        Depois que o carrinho esta todo configurado e com seus itens inseridos, ex: quando o seu cliente clicar no botÃ£o "efetuar pagamento", o seguinte mÃ©todo deverÃ¡ ser executado.
        
        ```python
        response = pg.checkout()
        ```
        
        O mÃ©todo checkout faz a requisiÃ§Ã£o ao pagseguro e retorna um objeto PagSeguroResponse com os atributos code, date, payment_url, errors.
        
        Ã‰ aconselhavel armazenar o cÃ³digo da transaÃ§Ã£o em seu banco de dados juntamente com as informaÃ§Ãµes do carrinho para seu controle interno.
        
        Utilize a **payment_url** para enviar o comprador para a pÃ¡gina de pagamento do pagseguro.
        
        ```python
        return redirect(response.payment_url)
        ```
        
        ApÃ³s o pagamento o comprador serÃ¡ redirecionado de volta para os eu site atravÃ©s da configuraÃ§Ã£o de url de retorno global ou utilizarÃ¡ a url especificada no parametro **redirect_url**
        
        # NotificaÃ§Ãµes
        
        O PagSeguro envia as notificaÃ§Ãµes para a URL que vocÃª configurou usando o protocolo HTTP, pelo mÃ©todo POST.
        
        Suponde que vocÃª receberÃ¡ a notificaÃ§Ã£o em: http://seusite.com/notification
        
        > Pseudo codigo
        
        ```python
        from pagseguro import PagSeguro
        
        def notification_view(request):
            notification_code = request.POST['notificationCode']
            pg = PagSeguro(email="seuemail@dominio.com", token="ABCDEFGHIJKLMNO")
            notification_data = pg.check_notification(notification_code)
            ...
        ```
        
        No exemplo acima pegamos o **notificationCode** que foi enviado atravÃ©s do pagseguro e fizemos uma consulta para pegar os dados da notificaÃ§Ã£o, o retorno serÃ¡ em um dicionÃ¡rio Python com o seguinte formato:
        
        ```python
        {
            "date": datetime(2013, 01, 01, 18, 23, 0000),
            "code": "XDFD454545",
            "reference": "REF00123456789",
            "type": 1,
            "status": 3,
            "cancellationSource": "INTERNAL",
            ...
        }
        ```
        
        A lista completa de valores pode ser conferida em  https://pagseguro.uol.com.br/v2/guia-de-integracao/api-de-notificacoes.html
        
        
        # ImplementaÃ§Ãµes
        
        > ImplementaÃ§Ãµes a serem feitas, esperando o seu Pull Request!!!
        
        ## Quokka CMS
        [Quokka Cart PagSeguro Processor](https://github.com/pythonhub/quokka-cart/blob/master/processors/pagseguro_processor.py)
        
        ## Exemplo em Django
        
        ## Exemplo em Flask
        
        [FlaskSeguro](https://github.com/rochacbruno/python-pagseguro/tree/master/examples/flask)
        by @shyba
        
        ## Exemplo em web2py
        
        
        
        ## Mantenedores
        
        Thanks goes to these wonderful people ([emoji key](https://github.com/kentcdodds/all-contributors#emoji-key)):
        
        <!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->
        | [<img src="https://avatars1.githubusercontent.com/u/1661112?v=4" width="100px;"/><br /><sub>Patrick Mazulo</sub>](http://blog.dunderlabs.com)<br />[ðŸ’»](https://github.com/rochacbruno/python-pagseguro/commits?author=mazulo "Code") [ðŸ“–](https://github.com/rochacbruno/python-pagseguro/commits?author=mazulo "Documentation") | [<img src="https://avatars3.githubusercontent.com/u/234982?v=4" width="100px;"/><br /><sub>mauler</sub>](http://mauler.github.io)<br />[ðŸ’»](https://github.com/rochacbruno/python-pagseguro/commits?author=mauler "Code") [ðŸ“–](https://github.com/rochacbruno/python-pagseguro/commits?author=mauler "Documentation") | [<img src="https://avatars1.githubusercontent.com/u/178641?v=4" width="100px;"/><br /><sub>Ellison LeÃ£o</sub>](http://ellison.rocks)<br />[ðŸ’»](https://github.com/rochacbruno/python-pagseguro/commits?author=ellisonleao "Code") [ðŸ“–](https://github.com/rochacbruno/python-pagseguro/commits?author=ellisonleao "Documentation") | [<img src="https://avatars3.githubusercontent.com/u/13952931?v=4" width="100px;"/><br /><sub>Augusto Goulart</sub>](https://augustogoulart.me/)<br />[ðŸ’»](https://github.com/rochacbruno/python-pagseguro/commits?author=augustogoulart "Code") [ðŸ“–](https://github.com/rochacbruno/python-pagseguro/commits?author=augustogoulart "Documentation") | [<img src="https://avatars2.githubusercontent.com/u/458654?v=4" width="100px;"/><br /><sub>Bruno Rocha</sub>](http://brunorocha.org)<br />[ðŸ’»](https://github.com/rochacbruno/python-pagseguro/commits?author=rochacbruno "Code") [ðŸ“–](https://github.com/rochacbruno/python-pagseguro/commits?author=rochacbruno "Documentation") | [<img src="https://avatars0.githubusercontent.com/u/153288?v=4" width="100px;"/><br /><sub>Guto Maia</sub>](http://gutomaia.net)<br />[ðŸ’»](https://github.com/rochacbruno/python-pagseguro/commits?author=gutomaia "Code") [ðŸ“–](https://github.com/rochacbruno/python-pagseguro/commits?author=gutomaia "Documentation") |
        | :---: | :---: | :---: | :---: | :---: | :---: |
        <!-- ALL-CONTRIBUTORS-LIST:END -->
        
        This project follows the [all-contributors](https://github.com/kentcdodds/all-contributors) specification. Contributions of any kind welcome!
        
Keywords: pagseguro,payment,payments,credit-card
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Description-Content-Type: text/markdown
